[[reference-architectures]]
= Reference architectures

Elasticsearch reference architectures serve as blueprints for deploying, managing, and optimizing Elasticsearch clusters tailored to different use cases. Whether you're handling logs, metrics, or sophisticated search applications, these reference architectures ensure scalability, reliability, and efficient resource utilization. By leveraging these guidelines, organizations can confidently deploy Elasticsearch, minimizing risks and complexities.

These architectures are designed by Solutions Architects to provide standardized, proven solutions that help users with best practices for deploying Elasticsearch. Some of the key areas of focus are listed below. 

* Infrastructure setup
* Data ingestion
* Indexing
* Search performance
* High availability 

TIP: These architectures are specific to running your deployment on-premises or cloud. If you are using Elastic serverless we take care of all of this for you. For all the deployment options, see https://www.elastic.co/guide/en/elasticsearch/reference/current/elasticsearch-intro-deploy.html[Run Elasticsearch].

These reference architectures are recommendations and should be adapted to fit your specific environment and needs. Each solution can vary based on the unique requirements and conditions of your deployment. In these architectures we discuss about how to deploy cluster components. For information about designing ingest architectures to feed content into your cluster, refer to https://www.elastic.co/guide/en/ingest/current/use-case-arch.html[Ingest architectures]

[discrete]
[[reference-architectures-time-series-2]]
=== Architectures

[cols="50, 50"]
|===
| *Architecture* | *When to use*
| <<elastic-cloud-architecture>>

This architecture is a Hot-Frozen architecture that is optimized for time series datasets while keeping all of the data fully searchable. It leverages Elastic Cloud where we apply best practices and run your cluster on optimal cloud instance types that we have selected through extenstive testing. It maintains index structures that allow for fast search in cloud object stores. 

a| 
* You want to leverage cloud provider hardware that have been extensively tested.
* You need long retention periods with the ability to search indices in an object store cost-effectively.
* Leverage cloud provider's highly available object stores for data integrity so you don't have to depend on your own.

| <<multi-region-two-datacenter-architecture>>

A scalable and highly available architecture for Elasticsearch using two datacenters in separate geographical regions

a| 
* Monitor the performance and health of their applications in real-time
* Provide insights and alerts to ensure optimal performance and quick issue resolution.


| <<self-managed-single-datacenter>>

An architecture is designed to satisfy high availability requirements under normal processing as well as including high availability and resiliency during node maintenance or re-paving activities.

a| 
* When you only have one datacenter available
* TBD.

| <<three-availability-zones>>

Need a short description here...

a| 
* TBD
* TBD
|
|===

include::multi-region-two-datacenter-architecture.asciidoc[]

include::elastic-cloud-architecture.asciidoc[]

include::self-managed-single-datacenter.asciidoc[]

include::three-availability-zones.asciidoc[]
