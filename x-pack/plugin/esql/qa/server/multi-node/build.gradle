import org.elasticsearch.gradle.internal.info.BuildParams
import org.elasticsearch.gradle.util.GradleUtils

apply plugin: 'elasticsearch.internal-java-rest-test'
apply plugin: 'elasticsearch.internal-yaml-rest-test'
apply plugin: 'elasticsearch.internal-test-artifact'

dependencies {
  javaRestTestImplementation project(xpackModule('esql:qa:testFixtures'))
  javaRestTestImplementation project(xpackModule('esql:qa:server'))
  yamlRestTestImplementation project(xpackModule('esql:qa:server'))

  clusterPlugins project(':plugins:mapper-size')
  clusterPlugins project(':plugins:mapper-murmur3')
  clusterPlugins project(':x-pack:plugin:inference:qa:test-service-plugin')
}

GradleUtils.extendSourceSet(project, "javaRestTest", "yamlRestTest")

tasks.named('javaRestTest') {
  usesDefaultDistribution()
}

restResources {
  restApi {
    include '_common', 'bulk', 'get', 'indices', 'esql', 'xpack', 'enrich', 'cluster', 'capabilities'
  }
  restTests {
    includeXpack 'esql'
  }
}

def restTestBlacklist = []

tasks.named('yamlRestTest') {
  usesDefaultDistribution()
  maxParallelForks = 1
  if (BuildParams.isSnapshotBuild()) {
    // this test and its sister below are running one in snapshot-only tests, the other in release tests
    restTestBlacklist.add('esql/60_usage_release/Basic ESQL usage output (telemetry)')
  } else {
    // this test has a specific number of esql.functions exposed, which is different than the same test (see below) because some functions
    // are not exposed in release versions (non-snapshot)
    restTestBlacklist.add('esql/60_usage/Basic ESQL usage output (telemetry)')
  }
  systemProperty 'tests.rest.blacklist', restTestBlacklist.join(',')
}
