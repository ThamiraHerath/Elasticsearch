[[self-managed-single-datacenter]]
=== Self-managed hot-frozen multi-region architecture for time series data
++++
<titleabbrev>Architecture: Self-managed - multi-region</titleabbrev>
++++

This architecture is designed to ensure high availability during normal operations and node maintenance. It reduces cost by leveraging the frozen tier as soon as it makes sense from an ingest and most frequently read documents perspective. It significantly reduces the likelihood of hot-spotting due to the sharding strategy. Additionally it eliminates network and disk overhead caused by rebalancing attempts that would occur during maintenance due to setting forced awareness. For more information on elements of this architecture, see https://www.elastic.co/guide/en/elasticsearch/reference/current/high-availability-cluster-design-large-clusters.html#high-availability-cluster-design-two-zones[Resilience in larger clusters - Two-zone clusters]. 

TIP: This architecture includes all the necessary components of the Elastic Stack and is not intended for sizing workloads, but rather as a basis to ensure the architecture you deploy is foundationally ready to handle any desired workload with resiliency. 

[discrete]
[[single-datacenter-use-case]]
==== Use case

This architecture is intended for organizations that need to do the following:

* Store data that is written once and not updated including logs. metrics or even accounting ledger where balance updates are done via additional offsetting entries.
* Be resilient to hardware failures.
* Ensure availability during operational maintenance of any given pod.
* Maintain a single copy of the data during maintenance.
* Leverage a Frozen Data tier as part of the https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-index-lifecycle.html[Information Lifecycle].
* Leverage a https://www.elastic.co/guide/en/elasticsearch/reference/current/snapshots-register-repository.html[Snapshot Repository] for additional recovery options.

[discrete]
[[single-datacenter-architecture]]
==== Architecture

image::images/single-datacenter.png["A self hosted single datacenter deployment"]

[discrete]
[[single-datacenter-considerations]]
==== Important considerations

The following list are important conderations for this architecture:

* **Operate**

** Maintenance will be done only on one pod at a time.

** A yellow cluster state is acceptable during maintenance.  (This will be due to replica shards being unassigned.)

* **Sample Initial Settings / Configuration:

** 3 Master Nodes (1 that is voting only) - Note: an odd number of initial master nodes is required.

** 4 Hot Data Nodes; 2 Frozen Nodes

** 1 Primary; 1 Replica

** Machine Learning Nodes - Optional (1 per POD-1, 2)

** Index - total_shards_per_node = 1 (assuming there will be always more nodes than shards needed).  This will prevent hot-spotting.  This should; however,  be relaxed to total_shards_per_node = 2 if the number of nodes and required number of shards are equal or close to equal due to the shard allocation processes being opportunistic. (i.e. if overly aggressive, shards could be placed in a way to create a situation where a shard could not be allocated - and create a yellow cluster state)

** Set up a repository for the frozen tier.

** Set up a  snapshot repository.

* **Forced Awareness:**  This should be set in In order to prevent Elastic from trying to create replica shards when a given POD is down for maintenance.

* https://www.elastic.co/guide/en/elasticsearch/reference/8.16/snapshots-take-snapshot.html#automate-snapshots-slm[SLM (Snapshot Lifecycle Management): Considerations]

[discrete]
[[single-datacenter-limitations]]
==== Limitations of this architecture
** This design does not address cross region disaster recovery.
** Only a single copy of the most recently written data that is not yet part of a snapshot data exists during maintenance windows. This can be addressed by adding data nodes to pod 3 and setting the sharding strategy to 1 Primary and 2 Replicas.
** This design assumes the data is read only and not updated.

[discrete]
[[single-datacenter-benefits]]
==== Benefits of this architecture**
** Reduces cost by leveraging the Frozen tier as soon as that makes sense from an ingest and most frequently read documents perspective
** Significantly reduces the likelihood of hot-spotting due to the sharding strategy
** Eliminates network and disk overhead caused by rebalancing attempts that would occur during maintenance due to setting forced awareness.


[discrete]
[[single-datacenter-resources]]
==== Resources and references

* <<shard-size-best-practices,Size your shards>>
* https://www.elastic.co/guide/en/elasticsearch/reference/current/index.html[Elasticsearch Documentation]
* https://www.elastic.co/guide/en/kibana/current/index.html[Kibana Documentation]